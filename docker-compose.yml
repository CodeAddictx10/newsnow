services:
  app:
        build:
          context: ./frontend
          dockerfile: Dockerfile
          args:
            ENV_FILE: .env
        image: news_app
        ports:
          - "3000:3000"
        networks:
          - news_app_network
        depends_on:
          - backend

  backend:
    build:
      args:
        user: "codeaddict"
        uid: "1000"
      context: ./backend
      dockerfile: Dockerfile
    image: news_app_backend
    container_name: news_app_backend
    restart: unless-stopped
    depends_on:
      - db
    working_dir: /var/www/html
    ports:
      - 9000:9000
    volumes:
      - ./backend:/var/www/html
    networks:
      - news_app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/api/v1"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "8082:80"
    volumes:
      - ./deployment/nginx:/etc/nginx/conf.d
    networks:
      - news_app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  db:
    image: mysql:latest
    container_name: db
    restart: unless-stopped
    ports:
      - 3337:3306
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: newsnow
      MYSQL_PASSWORD: password
      MYSQL_USER: newsnow
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - news_app_network

  phpmyadmin:
    image: phpmyadmin:5.2.1-apache
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - 8083:80
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: password
    networks:
      - news_app_network
  
  cronjob:
    build:
      args:
        user: "codeaddict"
        uid: "1000"
      context: ./backend
      dockerfile: Dockerfile
    image: news_app_cronjob
    container_name: news_app_cron
    restart: unless-stopped
    working_dir: /var/www/html
    depends_on:
      - db
    volumes:
      - ./backend:/var/www/html
    entrypoint: ["sh", "-c", "while true; do php artisan schedule:run >> /var/www/html/storage/logs/cron.log 2>&1; sleep 60; done"]

    networks:
      - news_app_network


volumes:
  mysql_data:
    driver: local

networks:
  news_app_network:
    driver: bridge
  